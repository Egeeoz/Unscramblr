import * as functions from "firebase-functions";

const words = [
  "ability",
  "absence",
  "academy",
  "account",
  "achieve",
  "acquire",
  "address",
  "advance",
  "adviser",
  "against",
  "airline",
  "airport",
  "alcohol",
  "already",
  "amazing",
  "ancient",
  "android",
  "animals",
  "another",
  "anxiety",
  "anybody",
  "applied",
  "approach",
  "approve",
  "archive",
  "article",
  "assault",
  "attempt",
  "attract",
  "auction",
  "average",
  "awesome",
  "balance",
  "balloon",
  "barrier",
  "battery",
  "believe",
  "benefit",
  "bicycle",
  "biology",
  "blanket",
  "brother",
  "browser",
  "builder",
  "burning",
  "cabinet",
  "calcium",
  "caliber",
  "camping",
  "capable",
  "capital",
  "captain",
  "capture",
  "careful",
  "carrier",
  "cartoon",
  "ceiling",
  "certain",
  "chamber",
  "channel",
  "chapter",
  "charity",
  "chicken",
  "circuit",
  "citizen",
  "classic",
  "climate",
  "clothes",
  "coating",
  "college",
  "combine",
  "comfort",
  "command",
  "comment",
  "company",
  "compare",
  "complex",
  "concept",
  "conduct",
  "confirm",
  "connect",
  "consent",
  "contest",
  "content",
  "control",
  "correct",
  "counter",
  "country",
  "courage",
  "covered",
  "culture",
  "current",
  "custody",
  "curious",
  "damages",
  "dancing",
  "dangers",
  "defense",
  "deliver",
  "density",
  "deposit",
  "desktop",
  "develop",
  "diamond",
  "digital",
  "diploma",
  "display",
  "distant",
  "disturb",
  "diverse",
  "domestic",
  "economy",
  "edition",
  "element",
  "emerald",
  "emotion",
  "emperor",
  "enquiry",
  "evening",
  "example",
  "excited",
  "exclude",
  "execute",
  "exhibit",
  "expense",
  "explore",
  "factory",
  "faculty",
  "failure",
  "fantasy",
  "feature",
  "federal",
  "finance",
  "fitness",
  "foreign",
  "formula",
  "fortune",
  "forward",
  "freedom",
  "friends",
  "gallery",
  "genetic",
  "genuine",
  "gesture",
  "graphic",
  "gravity",
  "grocery",
  "habitat",
  "harvest",
  "healthy",
  "heights",
  "history",
  "holiday",
  "horizon",
  "husband",
  "imagine",
  "improve",
  "include",
  "initial",
  "inquiry",
  "insight",
  "install",
  "instant",
  "instead",
  "intense",
  "interim",
  "internet",
  "invoice",
  "involve",
  "journey",
  "justice",
  "justify",
  "keyboard",
  "kitchen",
  "language",
  "lawsuit",
  "leaders",
  "liberty",
  "library",
  "license",
  "machine",
  "manager",
  "maximum",
  "meaning",
  "measure",
  "medical",
  "meeting",
  "mention",
  "message",
  "mineral",
  "minimum",
  "miracle",
  "mission",
  "mistake",
  "mixture",
  "monitor",
  "mountain",
  "musical",
  "mystery",
  "natural",
  "network",
  "nothing",
  "nuclear",
  "numeric",
  "officer",
  "ongoing",
  "opinion",
  "organic",
  "outdoor",
  "outcome",
  "outline",
  "overall",
  "package",
  "painter",
  "parking",
  "partner",
  "passage",
  "patient",
  "pattern",
  "payment",
  "penalty",
  "perfect",
  "perform",
  "perhaps",
  "picture",
  "plastic",
  "popular",
  "portion",
  "poverty",
  "precise",
  "premium",
  "prepare",
  "present",
  "prevent",
  "primary",
  "printer",
  "privacy",
  "private",
  "problem",
  "produce",
  "product",
  "profile",
  "program",
  "project",
  "promise",
  "protect",
  "protest",
  "provide",
  "publish",
  "purpose",
  "qualify",
  "quality",
  "quarter",
  "radical",
  "railway",
  "reality",
  "receipt",
  "receive",
  "recover",
  "reflect",
  "regular",
  "related",
  "release",
  "remains",
  "removal",
  "replace",
  "request",
  "require",
  "reserve",
  "respect",
  "respond",
  "restore",
  "results",
  "revenue",
  "reverse",
  "science",
  "scratch",
  "section",
  "segment",
  "serious",
  "service",
  "setting",
  "shelter",
  "sheriff",
  "similar",
  "society",
  "somehow",
  "someone",
  "speaker",
  "special",
  "station",
  "storage",
  "strange",
  "stretch",
  "student",
  "subject",
  "succeed",
  "suggest",
  "summary",
  "support",
  "surface",
  "surgery",
  "surplus",
  "survive",
  "suspect",
  "sustain",
  "systems",
  "teacher",
  "telecom",
  "therapy",
  "thought",
  "through",
  "tonight",
  "totally",
  "towards",
  "traffic",
  "trouble",
  "typical",
  "unknown",
  "upgrade",
  "utility",
  "variety",
  "venture",
  "version",
  "veteran",
  "village",
  "visitor",
  "voltage",
  "warning",
  "weather",
  "website",
  "welcome",
  "welfare",
  "western",
  "whereas",
  "whereby",
  "whether",
  "willing",
  "without",
  "worship",
  "writing",
  "written",
  "absolute",
];

export const dailyWord = functions.https.onRequest(async (req, res) => {
  res.set("Access-Control-Allow-Origin", "*");
  res.set("Access-Control-Allow-Methods", "GET, OPTIONS");
  res.set("Access-Control-Allow-Headers", "Content-Type");

  if (req.method === "OPTIONS") {
    res.status(204).send("");
    return;
  }

  if (req.method !== "GET") {
    res.status(405).send("Method not allowed");
    return;
  }

  try {
    // Get today's date
    const today = new Date();
    const todayFormatted = today.toISOString().substring(0, 10);
    console.log("Today's date:", todayFormatted);

    // Create a seed from the date string
    let seed = 0;
    for (let i = 0; i < todayFormatted.length; i++) {
      seed = ((seed << 5) - seed + todayFormatted.charCodeAt(i)) & 0xffffffff;
    }

    // Make seed positive
    seed = Math.abs(seed);

    // Filter words by length (4-7 characters)
    const filteredWords = words.filter(
      (word) => word.length >= 4 && word.length <= 7,
    );
    console.log("Filtered words count:", filteredWords.length);

    // Use seed to select consistent word for the day
    const wordIndex = seed % filteredWords.length;
    const selectedWord = filteredWords[wordIndex];

    console.log("Selected word:", selectedWord);

    res.status(200).json({
      word: selectedWord,
      totalWords: filteredWords.length,
      date: todayFormatted,
    });
  } catch (error: unknown) {
    console.error("Function failed:", String(error));
    res.status(500).json({message: "Internal server error"});
  }
});
